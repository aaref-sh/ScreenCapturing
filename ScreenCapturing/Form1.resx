<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbmic.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        1lH/tQAAAABJRU5ErkJggg==
</value>
  </data>
</root>